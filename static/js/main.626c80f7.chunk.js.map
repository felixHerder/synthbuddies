{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","target","value","fetch","then","response","json","users","frobots","filter","elem","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6OAceA,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACI,sBAAKC,UAAU,yDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCULK,EAdE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAGf,OACI,8BAEQA,EAAOC,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,CAAoBP,GAAIO,EAAKP,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OAAnDQ,EAAKP,UCC5BQ,EAVG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAE7B,OACI,qBAAKT,UAAU,OAAf,SACI,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAc,gBAAgBC,SAAUH,OCKvGI,EATA,SAACC,GAEd,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACGJ,EAAMK,YCcEC,E,kDAjBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CAAEC,UAAU,GAFT,E,qDAKlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACE,OAAGG,KAAKJ,MAAMC,SACL,mDACFG,KAAKX,MAAMK,a,GAbKQ,aC6CZC,G,wDArCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAS,CACVjB,OAAQ,GACRI,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfyB,MAAM,8CACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAOpC,WAAS,IAAD,OACEC,EAAUb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAACC,GAAD,OAASA,EAAK3C,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAE/G,OAAQhB,KAAKJ,MAAMjB,OAAOuC,OAGxB,sBAAK3C,UAAU,KAAf,UACA,oBAAKA,UAAU,KAAf,0BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACmB,cAAC,EAAD,UACd,cAAC,EAAD,CAAUzB,OAAQkC,WAPxB,uD,GAvBcM,IAAMjB,YCGTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.626c80f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n    return (\r\n        <div className='f7 tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"synths\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst Cardlist = ({robots})=> {\r\n    //if(true) throw new Error(\"Hell no!\");\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n                robots.map(user =>{\r\n                    return <Card key={user.id} id={user.id} name={user.name} email={user.email} /> \r\n                })\r\n            } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox = ({searchfield, searchChange})=>{\r\n    \r\n    return(\r\n        <div className='pa2 '>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder = 'search synths' onChange={searchChange}\r\n            />\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll = (props) =>\r\n{\r\n  return(\r\n    <div style={{overflowY:'scroll', border:'1px solid black', height:'800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { hasError: false}\r\n  }\r\n\r\n  componentDidCatch(error, info){\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render(){\r\n    if(this.state.hasError)\r\n      return <h1>Thats is not good</h1>;\r\n    return this.props.children;\r\n  }\r\n  \r\n}\r\n\r\nexport default ErrorBoundry;","import React from \"react\";\r\nimport Cardlist from '../components/Cardlist';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from'../components/Scroll';\r\nimport ErroBoundry  from '../components/ErrorBoundry';\r\nimport \"./App.css\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state =  {  \r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(users =>this.setState({robots:users}));\r\n    }\r\n\r\n    OnSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const frobots = this.state.robots.filter((elem)=> elem.name.toLowerCase().includes(this.state.searchfield.toLowerCase()));\r\n\t\t\t\t\r\n\t\t\treturn !this.state.robots.length ?\r\n\t\t\t\t<h1>Loading synths...</h1>\r\n\t\t\t\t:\r\n\t\t\t\t(<div className=\"tc\">\r\n\t\t\t\t\t<h1  className='f2'>Synthfriends</h1>\r\n\t\t\t\t\t<Searchbox searchChange={this.OnSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n                        <ErroBoundry>\r\n\t\t\t\t\t\t    <Cardlist robots={frobots}/>\r\n                        </ErroBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>);\r\n\t\t\t\t\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}